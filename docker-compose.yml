services:
  api:
    image: api
    depends_on:
      - mongo
    ports:
      - "${API_PORT}:${API_PORT}"
    restart: unless-stopped
    networks:
      - netzero
    environment:
      MONGODB_URL: ${MONGODB_URL}
      JWT_SECRET: ${JWT_SECRET}
      GMAIL_USER: ${GMAIL_USER}
      GMAIL_PASS: ${GMAIL_PASS}
      API_PORT: ${API_PORT}
      API_URL: ${API_URL}
      WORKER_URL: ${WORKER_URL}
      REDIRECT_URL: ${REDIRECT_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      PUBLISHER_PORT: ${PUBLISHER_PORT}

  subscriber:
    image: subscriber
    depends_on:
      - mongo
    restart: unless-stopped
    networks:
      - netzero
    environment:
      MQTT_BROKER_URL: ${MQTT_BROKER_URL}
      MQTT_BROKER_USER: ${MQTT_BROKER_USER}
      MQTT_BROKER_PWD: ${MQTT_BROKER_PWD}
      API_URL: ${API_URL}
      MONGODB_URL: ${MONGODB_URL}

  publisher:
    image: publisher
    depends_on:
      - api
    ports:
      - "${PUBLISHER_PORT}:${PUBLISHER_PORT}"
    restart: unless-stopped
    networks:
      - netzero
    environment:
      PUBLISHER_PORT: ${PUBLISHER_PORT}
      MQTT_BROKER_URL: ${MQTT_BROKER_URL}
      MQTT_BROKER_USER: ${MQTT_BROKER_USER}
      MQTT_BROKER_PWD: ${MQTT_BROKER_PWD}

  mongo:
    image: mongo:latest
    volumes:
      - mongodata:/data/db
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    restart: unless-stopped
    networks:
      - netzero
    command: mongod --quiet --logpath /dev/null
  
  redis:
    image: redis
    volumes:
      - redisdata:/data/redisdb
    command: redis-server --requirepass ${REDIS_PASSWORD} --loglevel warning
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    networks:
      - netzero
    restart: unless-stopped

  master:
    image: master
    depends_on:
      - redis
    networks:
      - netzero
    environment:
      MASTER_PORT: ${MASTER_PORT}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      DEBUG: ${DEBUG}
    ports:
      - ${MASTER_PORT}:${MASTER_PORT}
    restart: unless-stopped
  
  worker:
    image: worker
    depends_on:
      - redis
    networks:
      - netzero
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      MONGODB_URL: ${MONGODB_URL}
      GEOCODER_API_KEY: ${GEOCODER_API_KEY}
      # - REDIS_PORT=6379
      # - REDIS_PASSWORD=${REDIS_PASSWORD}
      # - REDIS_HOST=redis
      # - DEBUG=${DEBUG}
      # - MASTER_PORT=${MASTER_PORT}
      # - GEOCODER_API_KEY=${GEOCODER_API_KEY}
      # - MONGODB_HOST=${MONGODB_HOST}
      # - MONGODB_PORT=${MONGODB_PORT}
      # - MONGODB_DATABASE=${MONGODB_DATABASE}
    restart: unless-stopped
    deploy:
      replicas: 2

  auth-service:
    image: auth-service
    depends_on:
      - mongo
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    restart: unless-stopped
    networks:
      - netzero
    environment:
      SALT_ROUNDS: ${SALT_ROUNDS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      MONGODB_URL: ${MONGODB_URL}
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_PORT}
      FRONTEND_URL: ${FRONTEND_URL}
      API_URL: ${API_URL}

networks:
  netzero:
    driver: bridge

volumes:
  mongodata:
    name: mongo_volume
    driver: local
  redisdata:
    driver: local
